/**********************************************************************

	--- Dlgedit generated file ---

	File: optdata.cpp
	Last generated: Wed Jun 4 23:08:05 1997

	DO NOT EDIT!!!  This file will be automatically
	regenerated by dlgedit.  All changes will be lost.

 *********************************************************************/

#include "optdata.h"

#define Inherited QDialog

#include <qframe.h>
#include <qlabel.h>
#include <kapp.h>

KornOptData::KornOptData
(
	QWidget* parent,
	const char* name
)
	:
	Inherited( parent, name )
{
	QFrame* tmpQFrame;
	tmpQFrame = new QFrame( this, "Frame_4" );
	tmpQFrame->setGeometry( 10, 10, 400, 300 );
	tmpQFrame->setFrameStyle( 34 );

	tmpQFrame = new QFrame( this, "AudioCmd" );
	tmpQFrame->setGeometry( 160, 210, 240, 90 );
	tmpQFrame->setFrameStyle( 50 );

	tmpQFrame = new QFrame( this, "Frame_1" );
	tmpQFrame->setGeometry( 160, 30, 240, 90 );
	tmpQFrame->setFrameStyle( 50 );

	tmpQFrame = new QFrame( this, "Frame_2" );
	tmpQFrame->setGeometry( 160, 120, 240, 90 );
	tmpQFrame->setFrameStyle( 50 );

	boxList = new QListBox( this, "RecipeList" );
	boxList->setGeometry( 20, 40, 130, 220 );
	connect( boxList, SIGNAL(highlighted(int)), SLOT(boxHighlight(int)) );
	connect( boxList, SIGNAL(selected(int)), SLOT(boxSelect(int)) );
	boxList->setFrameStyle( 51 );
	boxList->setLineWidth( 2 );

	okButton = new QPushButton( this, "OkButton" );
	okButton->setGeometry( 200, 320, 90, 30 );
	connect( okButton, SIGNAL(clicked()), SLOT(okClicked()) );
	okButton->setText( i18n("&OK") );
	okButton->setAutoRepeat( FALSE );
	okButton->setAutoResize( FALSE );

	cancelButton = new QPushButton( this, "CancelButton" );
	cancelButton->setGeometry( 300, 320, 100, 30 );
	{
		QFont font( "helvetica", 12, 63, 0 );
		font.setStyleHint( (QFont::StyleHint)0 );
		font.setCharSet( (QFont::CharSet)0 );
		cancelButton->setFont( font );
	}
	connect( cancelButton, SIGNAL(clicked()), SLOT(cancelClicked()) );
	cancelButton->setText( i18n("&Cancel") );
	cancelButton->setAutoRepeat( FALSE );
	cancelButton->setAutoResize( FALSE );

	NewBox = new QPushButton( this, "NewBox" );
	NewBox->setGeometry( 20, 270, 60, 30 );
	connect( NewBox, SIGNAL(clicked()), SLOT(newBox()) );
	NewBox->setText( i18n("&New") );
	NewBox->setAutoRepeat( FALSE );
	NewBox->setAutoResize( FALSE );

	QLabel* tmpQLabel;
	tmpQLabel = new QLabel( this, "Label_1" );
	tmpQLabel->setGeometry( 20, 20, 100, 20 );
	{
		QFont font( "helvetica", 12, 63, 0 );
		font.setStyleHint( (QFont::StyleHint)0 );
		font.setCharSet( (QFont::CharSet)0 );
		tmpQLabel->setFont( font );
	}
	tmpQLabel->setText( i18n("Boxes") );
	tmpQLabel->setAlignment( 273 );
	tmpQLabel->setMargin( -1 );

	DeleteBox = new QPushButton( this, "DeleteButton" );
	DeleteBox->setGeometry( 90, 270, 60, 30 );
	connect( DeleteBox, SIGNAL(clicked()), SLOT(deleteBox()) );
	DeleteBox->setText( i18n("&Delete") );
	DeleteBox->setAutoRepeat( FALSE );
	DeleteBox->setAutoResize( FALSE );

	boxName = new QLineEdit( this, "BoxName" );
	boxName->setGeometry( 260, 40, 130, 30 );
	connect( boxName, SIGNAL(returnPressed()), SLOT(dataChanged()) );
	boxName->setText( "" );
	boxName->setMaxLength( 32767 );
	boxName->setEchoMode( QLineEdit::Normal );
	boxName->setFrame( TRUE );

	boxCaption = new QLineEdit( this, "BoxCaption" );
	boxCaption->setGeometry( 260, 80, 130, 30 );
	connect( boxCaption, SIGNAL(returnPressed()), SLOT(dataChanged()) );
	boxCaption->setText( "" );
	boxCaption->setMaxLength( 32767 );
	boxCaption->setEchoMode( QLineEdit::Normal );
	boxCaption->setFrame( TRUE );

	tmpQLabel = new QLabel( this, "Label_4" );
	tmpQLabel->setGeometry( 170, 40, 60, 30 );
	tmpQLabel->setText( i18n("Name") );
	tmpQLabel->setAlignment( 265 );
	tmpQLabel->setMargin( -1 );

	tmpQLabel = new QLabel( this, "Label_5" );
	tmpQLabel->setGeometry( 170, 80, 70, 30 );
	tmpQLabel->setText( i18n("Caption") );
	tmpQLabel->setAlignment( 265 );
	tmpQLabel->setMargin( -1 );

	boxPath = new QLineEdit( this, "LineEdit_3" );
	boxPath->setGeometry( 240, 130, 150, 30 );
	connect( boxPath, SIGNAL(returnPressed()), SLOT(dataChanged()) );
	boxPath->setText( "" );
	boxPath->setMaxLength( 32767 );
	boxPath->setEchoMode( QLineEdit::Normal );
	boxPath->setFrame( TRUE );

	tmpQLabel = new QLabel( this, "Label_6" );
	tmpQLabel->setGeometry( 170, 130, 60, 30 );
	tmpQLabel->setText( i18n("Path") );
	tmpQLabel->setAlignment( 265 );
	tmpQLabel->setMargin( -1 );

	pollTime = new QLineEdit( this, "LineEdit_4" );
	pollTime->setGeometry( 240, 170, 150, 30 );
	connect( pollTime, SIGNAL(returnPressed()), SLOT(dataChanged()) );
	pollTime->setText( "" );
	pollTime->setMaxLength( 32767 );
	pollTime->setEchoMode( QLineEdit::Normal );
	pollTime->setFrame( TRUE );

	tmpQLabel = new QLabel( this, "Label_7" );
	tmpQLabel->setGeometry( 170, 170, 70, 30 );
	tmpQLabel->setText( i18n("Poll time (sec)") );
	tmpQLabel->setAlignment( 1289 );
	tmpQLabel->setMargin( -1 );

	tmpQLabel = new QLabel( this, "Label_8" );
	tmpQLabel->setGeometry( 170, 220, 70, 30 );
	tmpQLabel->setText( i18n("Notify Command") );
	tmpQLabel->setAlignment( 1289 );
	tmpQLabel->setMargin( -1 );

	notifyCmd = new QLineEdit( this, "LineEdit_10" );
	notifyCmd->setGeometry( 240, 220, 150, 30 );
	connect( notifyCmd, SIGNAL(textChanged(const char*)), SLOT(dataChanged(const char*)) );
	notifyCmd->setText( "" );
	notifyCmd->setMaxLength( 32767 );
	notifyCmd->setEchoMode( QLineEdit::Normal );
	notifyCmd->setFrame( TRUE );

	clickCmd = new QLineEdit( this, "LineEdit_6" );
	clickCmd->setGeometry( 240, 260, 150, 30 );
	connect( clickCmd, SIGNAL(returnPressed()), SLOT(dataChanged()) );
	clickCmd->setText( "" );
	clickCmd->setMaxLength( 32767 );
	clickCmd->setEchoMode( QLineEdit::Normal );
	clickCmd->setFrame( TRUE );

	tmpQLabel = new QLabel( this, "Label_9" );
	tmpQLabel->setGeometry( 170, 260, 70, 30 );
	tmpQLabel->setText( i18n("Click Command") );
	tmpQLabel->setAlignment( 1289 );
	tmpQLabel->setMargin( -1 );

	resize( 420, 360 );
}


KornOptData::~KornOptData()
{
}
void KornOptData::boxHighlight(int)
{
}
void KornOptData::boxSelect(int)
{
}
void KornOptData::okClicked()
{
}
void KornOptData::cancelClicked()
{
}
void KornOptData::newBox()
{
}
void KornOptData::deleteBox()
{
}
void KornOptData::dataChanged()
{
}
void KornOptData::dataChanged(const char*)
{
}
