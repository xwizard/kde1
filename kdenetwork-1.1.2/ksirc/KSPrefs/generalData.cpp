/**********************************************************************

	--- Qt Architect generated file ---

	File: generalData.cpp
	Last generated: Wed Dec 16 22:43:47 1998

	DO NOT EDIT!!!  This file will be automatically
	regenerated by qtarch.  All changes will be lost.

 *********************************************************************/

#include "generalData.h"

#define Inherited QWidget

#include <qlabel.h>
#include <qbttngrp.h>

generalData::generalData
(
	QWidget* parent,
	const char* name
)
	:
	Inherited( parent, name, 0 )
{
	QButtonGroup* dlgedit_ButtonGroup_4;
	dlgedit_ButtonGroup_4 = new QButtonGroup( this, "ButtonGroup_4" );
	dlgedit_ButtonGroup_4->setGeometry( 10, 10, 430, 170 );
	dlgedit_ButtonGroup_4->setMinimumSize( 10, 10 );
	dlgedit_ButtonGroup_4->setMaximumSize( 32767, 32767 );
	dlgedit_ButtonGroup_4->setFrameStyle( 49 );
	dlgedit_ButtonGroup_4->setTitle( "" );
	dlgedit_ButtonGroup_4->setAlignment( 1 );

	QButtonGroup* dlgedit_ButtonGroup_3;
	dlgedit_ButtonGroup_3 = new QButtonGroup( this, "ButtonGroup_3" );
	dlgedit_ButtonGroup_3->setGeometry( 10, 190, 430, 90 );
	dlgedit_ButtonGroup_3->setMinimumSize( 10, 10 );
	dlgedit_ButtonGroup_3->setMaximumSize( 32767, 32767 );
	dlgedit_ButtonGroup_3->setFrameStyle( 49 );
	dlgedit_ButtonGroup_3->setTitle( "" );
	dlgedit_ButtonGroup_3->setAlignment( 1 );

	CB_AutoCreateWin = new QCheckBox( this, "CheckBox_1" );
	CB_AutoCreateWin->setGeometry( 20, 20, 170, 30 );
	CB_AutoCreateWin->setMinimumSize( 10, 10 );
	CB_AutoCreateWin->setMaximumSize( 32767, 32767 );
	CB_AutoCreateWin->setText( "Auto Create Windows" );
	CB_AutoCreateWin->setAutoRepeat( FALSE );
	CB_AutoCreateWin->setAutoResize( FALSE );
	CB_AutoCreateWin->setChecked( TRUE );

	CB_BeepNotify = new QCheckBox( this, "CheckBox_3" );
	CB_BeepNotify->setGeometry( 240, 20, 170, 30 );
	CB_BeepNotify->setMinimumSize( 10, 10 );
	CB_BeepNotify->setMaximumSize( 32767, 32767 );
	CB_BeepNotify->setText( "Beep on Notify" );
	CB_BeepNotify->setAutoRepeat( FALSE );
	CB_BeepNotify->setAutoResize( FALSE );
	CB_BeepNotify->setChecked( TRUE );

	CB_NickCompletion = new QCheckBox( this, "CheckBox_4" );
	CB_NickCompletion->setGeometry( 20, 50, 170, 30 );
	CB_NickCompletion->setMinimumSize( 10, 10 );
	CB_NickCompletion->setMaximumSize( 32767, 32767 );
	CB_NickCompletion->setText( "Nick Completion" );
	CB_NickCompletion->setAutoRepeat( FALSE );
	CB_NickCompletion->setAutoResize( FALSE );
	CB_NickCompletion->setChecked( TRUE );

	CB_ColourPicker = new QCheckBox( this, "CheckBox_5" );
	CB_ColourPicker->setGeometry( 240, 50, 170, 30 );
	CB_ColourPicker->setMinimumSize( 10, 10 );
	CB_ColourPicker->setMaximumSize( 32767, 32767 );
	CB_ColourPicker->setText( "Colour Picker Popup" );
	CB_ColourPicker->setAutoRepeat( FALSE );
	CB_ColourPicker->setAutoResize( FALSE );
	CB_ColourPicker->setChecked( TRUE );

	CB_AutoRejoin = new QCheckBox( this, "CheckBox_6" );
	CB_AutoRejoin->setGeometry( 240, 90, 160, 20 );
	CB_AutoRejoin->setMinimumSize( 10, 10 );
	CB_AutoRejoin->setMaximumSize( 32767, 32767 );
	CB_AutoRejoin->setText( "Auto Rejoin" );
	CB_AutoRejoin->setAutoRepeat( FALSE );
	CB_AutoRejoin->setAutoResize( FALSE );
	CB_AutoRejoin->setChecked( TRUE );

	CB_BackgroundPix = new QCheckBox( this, "CheckBox_8" );
	CB_BackgroundPix->setGeometry( 20, 200, 190, 30 );
	CB_BackgroundPix->setMinimumSize( 10, 10 );
	CB_BackgroundPix->setMaximumSize( 32767, 32767 );
	CB_BackgroundPix->setText( "Enable Background Pixmap" );
	CB_BackgroundPix->setAutoRepeat( FALSE );
	CB_BackgroundPix->setAutoResize( FALSE );

	SLE_BackgroundFile = new QLineEdit( this, "LineEdit_6" );
	SLE_BackgroundFile->setGeometry( 20, 240, 260, 30 );
	SLE_BackgroundFile->setMinimumSize( 10, 10 );
	SLE_BackgroundFile->setMaximumSize( 32767, 32767 );
	SLE_BackgroundFile->setText( "" );
	SLE_BackgroundFile->setMaxLength( 32767 );
	SLE_BackgroundFile->setEchoMode( QLineEdit::Normal );
	SLE_BackgroundFile->setFrame( TRUE );

	PB_BackgroundBrowse = new QPushButton( this, "PushButton_7" );
	PB_BackgroundBrowse->setGeometry( 290, 240, 90, 30 );
	PB_BackgroundBrowse->setMinimumSize( 10, 10 );
	PB_BackgroundBrowse->setMaximumSize( 32767, 32767 );
	PB_BackgroundBrowse->setText( "Browse" );
	PB_BackgroundBrowse->setAutoRepeat( FALSE );
	PB_BackgroundBrowse->setAutoResize( FALSE );

	CB_DisplayTopic = new QCheckBox( this, "CheckBox_9" );
	CB_DisplayTopic->setGeometry( 20, 80, 210, 30 );
	CB_DisplayTopic->setMinimumSize( 10, 10 );
	CB_DisplayTopic->setMaximumSize( 32767, 32767 );
	CB_DisplayTopic->setText( "Display Topic in Caption" );
	CB_DisplayTopic->setAutoRepeat( FALSE );
	CB_DisplayTopic->setAutoResize( FALSE );
	CB_DisplayTopic->setChecked( TRUE );

	CB_MDIMode = new QCheckBox( this, "CheckBox_10" );
	CB_MDIMode->setGeometry( 20, 110, 410, 30 );
	CB_MDIMode->setMinimumSize( 10, 10 );
	CB_MDIMode->setMaximumSize( 32767, 32767 );
	CB_MDIMode->setText( "Use MDI Mode (Must restart to take effect, experimental!!)" );
	CB_MDIMode->setAutoRepeat( FALSE );
	CB_MDIMode->setAutoResize( FALSE );
	CB_MDIMode->setChecked( TRUE );

	KIL_WindowLength = new KIntegerLine( this, "KILWindowLength" );
	KIL_WindowLength->setGeometry( 20, 140, 150, 30 );
	KIL_WindowLength->setMinimumSize( 10, 10 );
	KIL_WindowLength->setMaximumSize( 32767, 32767 );

	QLabel* dlgedit_ScrollBackLineLabel;
	dlgedit_ScrollBackLineLabel = new QLabel( this, "ScrollBackLineLabel" );
	dlgedit_ScrollBackLineLabel->setGeometry( 180, 140, 250, 30 );
	dlgedit_ScrollBackLineLabel->setMinimumSize( 10, 10 );
	dlgedit_ScrollBackLineLabel->setMaximumSize( 32767, 32767 );
	dlgedit_ScrollBackLineLabel->setText( "Window History Length" );
	dlgedit_ScrollBackLineLabel->setAlignment( 289 );
	dlgedit_ScrollBackLineLabel->setMargin( -1 );

	dlgedit_ButtonGroup_4->insert( CB_AutoCreateWin );
	dlgedit_ButtonGroup_4->insert( CB_BeepNotify );
	dlgedit_ButtonGroup_4->insert( CB_NickCompletion );
	dlgedit_ButtonGroup_4->insert( CB_ColourPicker );
	dlgedit_ButtonGroup_4->insert( CB_AutoRejoin );
	dlgedit_ButtonGroup_4->insert( CB_DisplayTopic );
	dlgedit_ButtonGroup_4->insert( CB_MDIMode );

	dlgedit_ButtonGroup_3->insert( CB_BackgroundPix );
	dlgedit_ButtonGroup_3->insert( PB_BackgroundBrowse );

	resize( 450,300 );
	setMinimumSize( 450, 300 );
	setMaximumSize( 450, 300 );
}


generalData::~generalData()
{
}
