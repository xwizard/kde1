# Makefile.in generated automatically by automake 1.4 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

# set the include path for X, qt and KDE


SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ..






INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_alias = @build_alias@
build_triplet = @build@
host_alias = @host_alias@
host_triplet = @host@
target_alias = @target_alias@
target_triplet = @target@
AS = @AS@
CC = @CC@
CPP = @CPP@
CXX = @CXX@
CXXCPP = @CXXCPP@
DLLTOOL = @DLLTOOL@
GLINC = @GLINC@
GLLIB = @GLLIB@
GMSGFMT = @GMSGFMT@
IDL = @IDL@
KDE_EXTRA_RPATH = @KDE_EXTRA_RPATH@
KDE_INCLUDES = @KDE_INCLUDES@
KDE_LDFLAGS = @KDE_LDFLAGS@
KDE_RPATH = @KDE_RPATH@
LD = @LD@
LIBBSD = @LIBBSD@
LIBCOMPAT = @LIBCOMPAT@
LIBCRYPT = @LIBCRYPT@
LIBDL = @LIBDL@
LIBJPEG = @LIBJPEG@
LIBMICO = @LIBMICO@
LIBOBJS = @LIBOBJS@
LIBPNG = @LIBPNG@
LIBPTHREAD = @LIBPTHREAD@
LIBPYTHON = @LIBPYTHON@
LIBQIMGIO = @LIBQIMGIO@
LIBSOCKET = @LIBSOCKET@
LIBTIFF = @LIBTIFF@
LIBTOOL = @LIBTOOL@
LIBUCB = @LIBUCB@
LIBUU = @LIBUU@
LIBZ = @LIBZ@
LIB_KAB = @LIB_KAB@
LIB_KDECORE = @LIB_KDECORE@
LIB_KDEUI = @LIB_KDEUI@
LIB_KDEUTIL = @LIB_KDEUTIL@
LIB_KFILE = @LIB_KFILE@
LIB_KFM = @LIB_KFM@
LIB_KHTML = @LIB_KHTML@
LIB_KHTMLW = @LIB_KHTMLW@
LIB_KIMGIO = @LIB_KIMGIO@
LIB_KIO = @LIB_KIO@
LIB_MEDIATOOL = @LIB_MEDIATOOL@
LIB_QT = @LIB_QT@
LIB_X11 = @LIB_X11@
LN_S = @LN_S@
MAKEINFO = @MAKEINFO@
MICO_INCLUDES = @MICO_INCLUDES@
MICO_LDFLAGS = @MICO_LDFLAGS@
MOC = @MOC@
MSGFMT = @MSGFMT@
NM = @NM@
PACKAGE = @PACKAGE@
PAMINC = @PAMINC@
PAMLIBPATHS = @PAMLIBPATHS@
PAMLIBS = @PAMLIBS@
PYTHONINC = @PYTHONINC@
PYTHONLIB = @PYTHONLIB@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
RANLIB = @RANLIB@
TOPSUBDIRS = @TOPSUBDIRS@
USE_NLS = @USE_NLS@
VERSION = @VERSION@
XGETTEXT = @XGETTEXT@
XPMINC = @XPMINC@
XPMLIB = @XPMLIB@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_INCLUDES = @X_INCLUDES@
X_LDFLAGS = @X_LDFLAGS@
all_includes = @all_includes@
all_libraries = @all_libraries@
install_root = @install_root@
kde_appsdir = @kde_appsdir@
kde_bindir = @kde_bindir@
kde_cgidir = @kde_cgidir@
kde_confdir = @kde_confdir@
kde_datadir = @kde_datadir@
kde_htmldir = @kde_htmldir@
kde_icondir = @kde_icondir@
kde_includes = @kde_includes@
kde_libraries = @kde_libraries@
kde_locale = @kde_locale@
kde_mimedir = @kde_mimedir@
kde_minidir = @kde_minidir@
kde_partsdir = @kde_partsdir@
kde_sounddir = @kde_sounddir@
kde_toolbardir = @kde_toolbardir@
kde_wallpaperdir = @kde_wallpaperdir@
qt_includes = @qt_includes@
qt_libraries = @qt_libraries@
static_libkde = @static_libkde@
static_libqt = @static_libqt@
static_libstdc = @static_libstdc@
topdir = @topdir@
x_includes = @x_includes@
x_libraries = @x_libraries@

INCLUDES = $(all_includes) -include $(srcdir)/kplunger/kplunger.h

# claim, which subdirectories you want to install
SUBDIRS = kplunger KSTicker KSProgress KSCutDialog KSPrefs 	KSColourPicker KSOpenkSirc pws-0.5 puke img doc


bin_PROGRAMS = ksirc # ${KSIRCSTATIC_PROGRAM}

noinst_PROGRAMS = getdate

EXTRA_PROGRAMS = ksircstatic

# Which sources should be compiled for ksirc.

ksirc_SOURCES =  	toplevel.cpp 	ksirc.cpp 	irclistbox.cpp 	irclistitem.cpp 	alistbox.cpp 	ahistlineedit.cpp 	iocontroller.cpp 	open_top.cpp open_topData.cpp 	messageReceiver.cpp 	ioBroadcast.cpp 	ksircprocess.cpp 	servercontroller.cpp 	KSircColour.cpp KSircColourData.cpp 	FilterRuleEditor.cpp FilterRuleEditorData.cpp 	ioDiscard.cpp 	ioDCC.cpp dccDialog.cpp dccDialogData.cpp 	linelistitem.cpp 	ioLAG.cpp 	ioNotify.cpp 	ssfeprompt.cpp ssfepromptdata.cpp 	usercontrolmenu.cpp 	kspainter.cpp 	baserules.cpp 	estring.cpp 	chanparser.cpp 	objFinder.cpp 	KMDIMgr.cpp KMDIMgrBase.cpp 	displayMgr.cpp displayMgrMDI.cpp displayMgrSDI.cpp 	welcomeWin.cpp welcomeWinData.cpp 	kpopupmenu.cpp


ksircstatic_SOURCES = $(ksirc_SOURCES)

# the library search path
ksirc_LDFLAGS = -export-dynamic $(all_libraries) $(KDE_RPATH)
ksircstatic_LDFLAGS = --nostdlib -static -all-static $(ksirc_LDFLAGS)

all_ksirc_libraries = ./kplunger/libkplunger.a 	./KSProgress/libksprogress.a 	./KSTicker/libksticker.a 	./KSCutDialog/libkscutdialog.a 	./KSPrefs/libksprefs.a 	./KSColourPicker/libkscolourpicker.a 	./KSOpenkSirc/libksopenksirc.a 	./pws-0.5/pws/libpws.a 	puke/libpuke.la $(LIB_KFILE) $(LIBDL) 


# the libraries to link against. Be aware of the order. First the libraries,
# that depend on the following ones.
ksirc_LDADD = $(all_ksirc_libraries)

ksircstatic_LDADD = $(all_ksirc_libraries)

STATIC_LIBS = $(static_libkde) $(static_libqt) $(static_libstdc) $(static_pthread) -lXext $(LIB_X11) $(LIBDL) -lm -lc

getdate_SOURCES = getdate.c

# this option you can leave out. Just, if you use "make dist", you need it
#
# DSIRC is on the bottom so make dist includes it!!!!!!!!!
#
noinst_HEADERS =  FilterRuleEditor.h        control_message.h         linelistitem.h FilterRuleEditorData.h    dccDialog.h               messageReceiver.h KSircColour.h             dccDialogData.h           KSircColourData.h         ioBroadcast.h             ioDCC.h                   open_top.h                usercontrolmenu.h ioDiscard.h               open_topData.h            kspainter.h ahistlineedit.h           iocontroller.h            servercontroller.h alistbox.h                irclistbox.h              chanparser.h config.h                  irclistitem.h             toplevel.h ksircprocess.h            ksirc.kdelnk              cdate.h ioLAG.h                   ioNotify.h                ssfeprompt.h ssfepromptdata.h          usercontrolmenu.h         objFinder.h dsirc                     filters.pl                ksirc.pl sirc.help.gz              baserules.h               estring.h KMDIMgr.h KMDIMgrBase.h  displayMgr.h displayMgrMDI.h displayMgrSDI.h


# just to make sure, automake makes them 
METASOURCES = FilterRuleEditor.moc 	FilterRuleEditorData.moc 	KSircColour.moc 	KSircColourData.moc 	ahistlineedit.moc 	alistbox.moc 	dccDialog.moc 	dccDialogData.moc 	ioDCC.moc 	ioLAG.moc 	ioNotify.moc 	iocontroller.moc 	irclistbox.moc 	irclistitem.moc 	ksircprocess.moc 	objFinder.moc 	open_top.moc 	open_topData.moc 	servercontroller.moc 	ssfeprompt.moc 	ssfepromptdata.moc 	toplevel.moc kpopupmenu.moc 	welcomeWin.moc welcomeWinData.moc 	KMDIMgr.moc KMDIMgrBase.moc 	displayMgr.moc displayMgrMDI.moc displayMgrSDI.moc 


bin_SCRIPTS = dsirc

apps_DATA = ksirc.kdelnk
appsdir = $(kde_appsdir)/Internet

misc_DATA = ksirc.pl filters.pl sirc.help.gz relnotes
miscdir = $(kde_datadir)/ksirc
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = ../config.h
CONFIG_CLEAN_FILES = 
PROGRAMS =  $(bin_PROGRAMS) $(noinst_PROGRAMS)


DEFS = @DEFS@ -I. -I$(srcdir) -I..
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
ksircstatic_OBJECTS =  toplevel.o ksirc.o irclistbox.o irclistitem.o \
alistbox.o ahistlineedit.o iocontroller.o open_top.o open_topData.o \
messageReceiver.o ioBroadcast.o ksircprocess.o servercontroller.o \
KSircColour.o KSircColourData.o FilterRuleEditor.o \
FilterRuleEditorData.o ioDiscard.o ioDCC.o dccDialog.o dccDialogData.o \
linelistitem.o ioLAG.o ioNotify.o ssfeprompt.o ssfepromptdata.o \
usercontrolmenu.o kspainter.o baserules.o estring.o chanparser.o \
objFinder.o KMDIMgr.o KMDIMgrBase.o displayMgr.o displayMgrMDI.o \
displayMgrSDI.o welcomeWin.o welcomeWinData.o kpopupmenu.o
ksircstatic_DEPENDENCIES =  ./kplunger/libkplunger.a \
./KSProgress/libksprogress.a ./KSTicker/libksticker.a \
./KSCutDialog/libkscutdialog.a ./KSPrefs/libksprefs.a \
./KSColourPicker/libkscolourpicker.a ./KSOpenkSirc/libksopenksirc.a \
./pws-0.5/pws/libpws.a puke/libpuke.la
ksirc_OBJECTS =  toplevel.o ksirc.o irclistbox.o irclistitem.o \
alistbox.o ahistlineedit.o iocontroller.o open_top.o open_topData.o \
messageReceiver.o ioBroadcast.o ksircprocess.o servercontroller.o \
KSircColour.o KSircColourData.o FilterRuleEditor.o \
FilterRuleEditorData.o ioDiscard.o ioDCC.o dccDialog.o dccDialogData.o \
linelistitem.o ioLAG.o ioNotify.o ssfeprompt.o ssfepromptdata.o \
usercontrolmenu.o kspainter.o baserules.o estring.o chanparser.o \
objFinder.o KMDIMgr.o KMDIMgrBase.o displayMgr.o displayMgrMDI.o \
displayMgrSDI.o welcomeWin.o welcomeWinData.o kpopupmenu.o
ksirc_DEPENDENCIES =  ./kplunger/libkplunger.a \
./KSProgress/libksprogress.a ./KSTicker/libksticker.a \
./KSCutDialog/libkscutdialog.a ./KSPrefs/libksprefs.a \
./KSColourPicker/libkscolourpicker.a ./KSOpenkSirc/libksopenksirc.a \
./pws-0.5/pws/libpws.a puke/libpuke.la
getdate_OBJECTS =  getdate.o
getdate_LDADD = $(LDADD)
getdate_DEPENDENCIES = 
getdate_LDFLAGS = 
SCRIPTS =  $(bin_SCRIPTS)

CXXFLAGS = @CXXFLAGS@
CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(LDFLAGS) -o $@
CFLAGS = @CFLAGS@
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@
DATA =  $(apps_DATA) $(misc_DATA)

HEADERS =  $(noinst_HEADERS)

DIST_COMMON =  ChangeLog Makefile.am Makefile.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = tar
GZIP_ENV = --best
SOURCES = $(ksircstatic_SOURCES) $(ksirc_SOURCES) $(getdate_SOURCES)
OBJECTS = $(ksircstatic_OBJECTS) $(ksirc_OBJECTS) $(getdate_OBJECTS)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .cpp .lo .o .s
$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && echo dupa --foreign --include-deps ksirc/Makefile
	cd $(top_srcdir) && perl admin/automoc ksirc/Makefile.in

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-binPROGRAMS:

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

distclean-binPROGRAMS:

maintainer-clean-binPROGRAMS:

install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo " $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`"; \
	    $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	list='$(bin_PROGRAMS)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	done

mostlyclean-noinstPROGRAMS:

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)

distclean-noinstPROGRAMS:

maintainer-clean-noinstPROGRAMS:

.c.o:
	$(COMPILE) -c $<

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

.c.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.s.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.S.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:

ksircstatic: $(ksircstatic_OBJECTS) $(ksircstatic_DEPENDENCIES)
	@rm -f ksircstatic
	$(CXXLINK) $(ksircstatic_LDFLAGS) $(ksircstatic_OBJECTS) $(ksircstatic_LDADD) $(LIBS)

ksirc: $(ksirc_OBJECTS) $(ksirc_DEPENDENCIES)
	@rm -f ksirc
	$(CXXLINK) $(ksirc_LDFLAGS) $(ksirc_OBJECTS) $(ksirc_LDADD) $(LIBS)

install-binSCRIPTS: $(bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_SCRIPTS)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo " $(INSTALL_SCRIPT) $$p $(DESTDIR)$(bindir)/`echo $$p|sed '$(transform)'`"; \
	    $(INSTALL_SCRIPT) $$p $(DESTDIR)$(bindir)/`echo $$p|sed '$(transform)'`; \
	  else if test -f $(srcdir)/$$p; then \
	    echo " $(INSTALL_SCRIPT) $(srcdir)/$$p $(DESTDIR)$(bindir)/`echo $$p|sed '$(transform)'`"; \
	    $(INSTALL_SCRIPT) $(srcdir)/$$p $(DESTDIR)$(bindir)/`echo $$p|sed '$(transform)'`; \
	  else :; fi; fi; \
	done

uninstall-binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	list='$(bin_SCRIPTS)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(bindir)/`echo $$p|sed '$(transform)'`; \
	done
.cpp.o:
	$(CXXCOMPILE) -c $<
.cpp.lo:
	$(LTCXXCOMPILE) -c $<

install-appsDATA: $(apps_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(appsdir)
	@list='$(apps_DATA)'; for p in $$list; do \
	  if test -f $(srcdir)/$$p; then \
	    echo " $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(appsdir)/$$p"; \
	    $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(appsdir)/$$p; \
	  else if test -f $$p; then \
	    echo " $(INSTALL_DATA) $$p $(DESTDIR)$(appsdir)/$$p"; \
	    $(INSTALL_DATA) $$p $(DESTDIR)$(appsdir)/$$p; \
	  fi; fi; \
	done

uninstall-appsDATA:
	@$(NORMAL_UNINSTALL)
	list='$(apps_DATA)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(appsdir)/$$p; \
	done

install-miscDATA: $(misc_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(miscdir)
	@list='$(misc_DATA)'; for p in $$list; do \
	  if test -f $(srcdir)/$$p; then \
	    echo " $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(miscdir)/$$p"; \
	    $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(miscdir)/$$p; \
	  else if test -f $$p; then \
	    echo " $(INSTALL_DATA) $$p $(DESTDIR)$(miscdir)/$$p"; \
	    $(INSTALL_DATA) $$p $(DESTDIR)$(miscdir)/$$p; \
	  fi; fi; \
	done

uninstall-miscDATA:
	@$(NORMAL_UNINSTALL)
	list='$(misc_DATA)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(miscdir)/$$p; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.

@SET_MAKE@

all-recursive install-data-recursive install-exec-recursive \
installdirs-recursive install-recursive uninstall-recursive  \
check-recursive installcheck-recursive info-recursive dvi-recursive:
	@set fnord $(MAKEFLAGS); amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@set fnord $(MAKEFLAGS); amf=$$2; \
	dot_seen=no; \
	rev=''; list='$(SUBDIRS)'; for subdir in $$list; do \
	  rev="$$subdir $$rev"; \
	  test "$$subdir" = "." && dot_seen=yes; \
	done; \
	test "$$dot_seen" = "no" && rev=". $$rev"; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
   if test "$$subdir" = .; then :; else \
	    test -f $$subdir/TAGS && tags="$$tags -i $$here/$$subdir/TAGS"; \
   fi; \
	done; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = ksirc

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done
	for subdir in $(SUBDIRS); do \
	  if test "$$subdir" = .; then :; else \
	    test -d $(distdir)/$$subdir \
	    || mkdir $(distdir)/$$subdir \
	    || exit 1; \
	    chmod 777 $(distdir)/$$subdir; \
	    (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir=../$(top_distdir) distdir=../$(distdir)/$$subdir distdir) \
	      || exit 1; \
	  fi; \
	done
info-am:
info: info-recursive
dvi-am:
dvi: dvi-recursive
check-am: all-am
check: check-recursive
installcheck-am:
installcheck: installcheck-recursive
install-exec-am: install-binPROGRAMS install-binSCRIPTS
install-exec: install-exec-recursive

install-data-am: install-appsDATA install-miscDATA
install-data: install-data-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-recursive
uninstall-am: uninstall-binPROGRAMS uninstall-binSCRIPTS \
		uninstall-appsDATA uninstall-miscDATA
uninstall: uninstall-recursive
all-am: Makefile $(PROGRAMS) $(SCRIPTS) $(DATA) $(HEADERS)
all-redirect: all-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs: installdirs-recursive
installdirs-am:
	$(mkinstalldirs)  $(DESTDIR)$(bindir) $(DESTDIR)$(bindir) \
		$(DESTDIR)$(appsdir) $(DESTDIR)$(miscdir)


mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
mostlyclean-am:  mostlyclean-binPROGRAMS mostlyclean-noinstPROGRAMS \
		mostlyclean-compile mostlyclean-libtool \
		mostlyclean-tags mostlyclean-generic

mostlyclean: mostlyclean-recursive

clean-am:  clean-binPROGRAMS clean-noinstPROGRAMS clean-compile \
		clean-libtool clean-tags clean-generic mostlyclean-am

clean: clean-recursive

distclean-am:  distclean-binPROGRAMS distclean-noinstPROGRAMS \
		distclean-compile distclean-libtool distclean-tags \
		distclean-generic clean-am
	-rm -f libtool

distclean: distclean-metasources distclean-recursive

maintainer-clean-am:  maintainer-clean-binPROGRAMS \
		maintainer-clean-noinstPROGRAMS \
		maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-tags maintainer-clean-generic \
		distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-recursive

.PHONY: mostlyclean-binPROGRAMS distclean-binPROGRAMS clean-binPROGRAMS \
maintainer-clean-binPROGRAMS uninstall-binPROGRAMS install-binPROGRAMS \
mostlyclean-noinstPROGRAMS distclean-noinstPROGRAMS \
clean-noinstPROGRAMS maintainer-clean-noinstPROGRAMS \
mostlyclean-compile distclean-compile clean-compile \
maintainer-clean-compile mostlyclean-libtool distclean-libtool \
clean-libtool maintainer-clean-libtool uninstall-binSCRIPTS \
install-binSCRIPTS uninstall-appsDATA install-appsDATA \
uninstall-miscDATA install-miscDATA install-data-recursive \
uninstall-data-recursive install-exec-recursive \
uninstall-exec-recursive installdirs-recursive uninstalldirs-recursive \
all-recursive check-recursive installcheck-recursive info-recursive \
dvi-recursive mostlyclean-recursive distclean-recursive clean-recursive \
maintainer-clean-recursive tags tags-recursive mostlyclean-tags \
distclean-tags clean-tags maintainer-clean-tags distdir info-am info \
dvi-am dvi check check-am installcheck-am installcheck install-exec-am \
install-exec install-data-am install-data install-am install \
uninstall-am uninstall all-redirect all-am all installdirs-am \
installdirs mostlyclean-generic distclean-generic clean-generic \
maintainer-clean-generic clean mostlyclean distclean maintainer-clean


kdoc:
	kdoc -ddoc ksirc *.h

i18n:
	perl conv-i18n-h `find . -name '*Data.h' -print |grep -Ev '.*/m.*'`	
	perl -n -i conv-i18n-cpp `find . -name '*Data.cpp' -print |grep -Ev '.*/m.*'`

getdate: getdate.c
	$(CC) $(CFLAGS) -o getdate $(srcdir)/getdate.c

cdate.h: getdate
	./getdate > cdate.h

$(srcdir)/ksirc.cpp: cdate.h

# make messages.po. Move this one to ../po/ and "make merge" in po
messages:
	$(XGETTEXT) -C -ki18n -x $(includedir)/kde.pot *.cpp */*.cpp && mv messages.po ../po/ksirc.pot

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:


$(srcdir)/FilterRuleEditor.cpp: FilterRuleEditor.moc
FilterRuleEditor.moc: $(srcdir)/FilterRuleEditor.h
	$(MOC) $(srcdir)/FilterRuleEditor.h -o FilterRuleEditor.moc

$(srcdir)/FilterRuleEditorData.cpp: FilterRuleEditorData.moc
FilterRuleEditorData.moc: $(srcdir)/FilterRuleEditorData.h
	$(MOC) $(srcdir)/FilterRuleEditorData.h -o FilterRuleEditorData.moc

$(srcdir)/KSircColour.cpp: KSircColour.moc
KSircColour.moc: $(srcdir)/KSircColour.h
	$(MOC) $(srcdir)/KSircColour.h -o KSircColour.moc

$(srcdir)/KSircColourData.cpp: KSircColourData.moc
KSircColourData.moc: $(srcdir)/KSircColourData.h
	$(MOC) $(srcdir)/KSircColourData.h -o KSircColourData.moc

$(srcdir)/ahistlineedit.cpp: ahistlineedit.moc
ahistlineedit.moc: $(srcdir)/ahistlineedit.h
	$(MOC) $(srcdir)/ahistlineedit.h -o ahistlineedit.moc

$(srcdir)/alistbox.cpp: alistbox.moc
alistbox.moc: $(srcdir)/alistbox.h
	$(MOC) $(srcdir)/alistbox.h -o alistbox.moc

$(srcdir)/dccDialog.cpp: dccDialog.moc
dccDialog.moc: $(srcdir)/dccDialog.h
	$(MOC) $(srcdir)/dccDialog.h -o dccDialog.moc

$(srcdir)/dccDialogData.cpp: dccDialogData.moc
dccDialogData.moc: $(srcdir)/dccDialogData.h
	$(MOC) $(srcdir)/dccDialogData.h -o dccDialogData.moc

$(srcdir)/ioDCC.cpp: ioDCC.moc
ioDCC.moc: $(srcdir)/ioDCC.h
	$(MOC) $(srcdir)/ioDCC.h -o ioDCC.moc

$(srcdir)/ioLAG.cpp: ioLAG.moc
ioLAG.moc: $(srcdir)/ioLAG.h
	$(MOC) $(srcdir)/ioLAG.h -o ioLAG.moc

$(srcdir)/ioNotify.cpp: ioNotify.moc
ioNotify.moc: $(srcdir)/ioNotify.h
	$(MOC) $(srcdir)/ioNotify.h -o ioNotify.moc

$(srcdir)/iocontroller.cpp: iocontroller.moc
iocontroller.moc: $(srcdir)/iocontroller.h
	$(MOC) $(srcdir)/iocontroller.h -o iocontroller.moc

$(srcdir)/irclistbox.cpp: irclistbox.moc
irclistbox.moc: $(srcdir)/irclistbox.h
	$(MOC) $(srcdir)/irclistbox.h -o irclistbox.moc

$(srcdir)/irclistitem.cpp: irclistitem.moc
irclistitem.moc: $(srcdir)/irclistitem.h
	$(MOC) $(srcdir)/irclistitem.h -o irclistitem.moc

$(srcdir)/ksircprocess.cpp: ksircprocess.moc
ksircprocess.moc: $(srcdir)/ksircprocess.h
	$(MOC) $(srcdir)/ksircprocess.h -o ksircprocess.moc

$(srcdir)/objFinder.cpp: objFinder.moc
objFinder.moc: $(srcdir)/objFinder.h
	$(MOC) $(srcdir)/objFinder.h -o objFinder.moc

$(srcdir)/open_top.cpp: open_top.moc
open_top.moc: $(srcdir)/open_top.h
	$(MOC) $(srcdir)/open_top.h -o open_top.moc

$(srcdir)/open_topData.cpp: open_topData.moc
open_topData.moc: $(srcdir)/open_topData.h
	$(MOC) $(srcdir)/open_topData.h -o open_topData.moc

$(srcdir)/servercontroller.cpp: servercontroller.moc
servercontroller.moc: $(srcdir)/servercontroller.h
	$(MOC) $(srcdir)/servercontroller.h -o servercontroller.moc

$(srcdir)/ssfeprompt.cpp: ssfeprompt.moc
ssfeprompt.moc: $(srcdir)/ssfeprompt.h
	$(MOC) $(srcdir)/ssfeprompt.h -o ssfeprompt.moc

$(srcdir)/ssfepromptdata.cpp: ssfepromptdata.moc
ssfepromptdata.moc: $(srcdir)/ssfepromptdata.h
	$(MOC) $(srcdir)/ssfepromptdata.h -o ssfepromptdata.moc

$(srcdir)/toplevel.cpp: toplevel.moc
toplevel.moc: $(srcdir)/toplevel.h
	$(MOC) $(srcdir)/toplevel.h -o toplevel.moc

$(srcdir)/kpopupmenu.cpp: kpopupmenu.moc
kpopupmenu.moc: $(srcdir)/kpopupmenu.h
	$(MOC) $(srcdir)/kpopupmenu.h -o kpopupmenu.moc

$(srcdir)/welcomeWin.cpp: welcomeWin.moc
welcomeWin.moc: $(srcdir)/welcomeWin.h
	$(MOC) $(srcdir)/welcomeWin.h -o welcomeWin.moc

$(srcdir)/welcomeWinData.cpp: welcomeWinData.moc
welcomeWinData.moc: $(srcdir)/welcomeWinData.h
	$(MOC) $(srcdir)/welcomeWinData.h -o welcomeWinData.moc

$(srcdir)/KMDIMgr.cpp: KMDIMgr.moc
KMDIMgr.moc: $(srcdir)/KMDIMgr.h
	$(MOC) $(srcdir)/KMDIMgr.h -o KMDIMgr.moc

$(srcdir)/KMDIMgrBase.cpp: KMDIMgrBase.moc
KMDIMgrBase.moc: $(srcdir)/KMDIMgrBase.h
	$(MOC) $(srcdir)/KMDIMgrBase.h -o KMDIMgrBase.moc

$(srcdir)/displayMgr.cpp: displayMgr.moc
displayMgr.moc: $(srcdir)/displayMgr.h
	$(MOC) $(srcdir)/displayMgr.h -o displayMgr.moc

$(srcdir)/displayMgrMDI.cpp: displayMgrMDI.moc
displayMgrMDI.moc: $(srcdir)/displayMgrMDI.h
	$(MOC) $(srcdir)/displayMgrMDI.h -o displayMgrMDI.moc

$(srcdir)/displayMgrSDI.cpp: displayMgrSDI.moc
displayMgrSDI.moc: $(srcdir)/displayMgrSDI.h
	$(MOC) $(srcdir)/displayMgrSDI.h -o displayMgrSDI.moc

distclean-metasources:
	-rm -f FilterRuleEditor.moc FilterRuleEditorData.moc KSircColour.moc KSircColourData.moc ahistlineedit.moc alistbox.moc dccDialog.moc dccDialogData.moc ioDCC.moc ioLAG.moc ioNotify.moc iocontroller.moc irclistbox.moc irclistitem.moc ksircprocess.moc objFinder.moc open_top.moc open_topData.moc servercontroller.moc ssfeprompt.moc ssfepromptdata.moc toplevel.moc kpopupmenu.moc welcomeWin.moc welcomeWinData.moc KMDIMgr.moc KMDIMgrBase.moc displayMgr.moc displayMgrMDI.moc displayMgrSDI.moc 

# DO_NOT_USE_AUTOMOC
