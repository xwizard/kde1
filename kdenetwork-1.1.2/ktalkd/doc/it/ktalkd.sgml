<!doctype linuxdoc system>

<!-- The ktalkd Handbook. -->

<article>

<!-- Title information -->

<title>Guida al ktalkd
<author>David Faure <tt/faure@kde.org/
<date>Versione 0.8.8, 4 Settembre 1998
<abstract>Questa guida si riferisce a ktalkd Versione 0.8.8

<!-- Table of contents -->
<toc>

<!-- Begin the document -->

<sect>Introduzione
<p>

<tt/ktalkd/ è un evoluto demone del talk - il programma che gestisce le richieste di talk in arrivo,
le annuncia e ti permette di rispondere con il programma cliente.
GLOSSARIO : In queste pagine, se qualcuno vuole chiamarti, tu sarai definito come "chiamato".

<tt/ktalkd/ ha le seguenti funzionalità:

<descrip>
<tag/KDE o non KDE/
Questo è il problema. :) Piu' seriamente vuol dire che è possibile compilare
<tt/ktalkd/ con o senza il supporto del KDE.
Durante la compilazione sarà verificato se X o le Qt o il KDE sono installati, specificando a configure l'opzione '--without-X', viene disabilitato il supporto del KDE. 

<tag/Risposta automatica/
Se il chiamato non è loggato o non risponde dopo il secondo annuncio,
il messaggio viene loggato e viene inviata una mail al chiamato.

<tag/Suono/
Se si desidera, un suono verrà emesso insieme all'annuncio.

<tag/Annuncio su X/
Se è stato compilato con il supporto KDE, ktalkd userà
<bf/ktalkdlg/, una finestra di dialogo stile KDE, per gli annunci.
Se ktalk è in esecuzione, sarà chiesto a lui di fare l'annuncio.
(Novità dalla 0.8.8).

<tag/Annuncio su display multipli/
Se hai settato il display su un terminale remoto (ad esempio con il comando
<tt/"export DISPLAY=..."/ ), l'annuncio sarà visualizzato anche su questo display. Rispondi su quello che piu' ti piace!

<tag/Inoltrare   <it/(Novità dalla 0.8.0)//
Puoi inoltrare la richiesta di talk ad un altro utente su un'altra macchina
nel caso fossi assente. Ci sono 3 differenti modi per inoltrare il talk.
Vedi nella sezione 'Utilizzo'.

<tag/Configurazione/
Se è stato compilato con il supporto KDE, leggerà i settaggi
dai file di configurazione del KDE, quelli di sistema
($KDEDIR/share/config/ktalkdrc) e quelli personali (nella home).
I settaggi di sistema devono essere editati manualmente dall'amministratore,
ma per l'utente esiste un'interfaccia grafica per configurazione.  
E' chiamata <bf/kcmktalkd/ e si trova nel Centro di controllo KDE.
Sui sistemi non KDE, <tt/ktalkd/ leggerà invece i settaggi dal file /etc/talkd.conf.

<tag/Internazionalizzazione/
Sotto KDE, l'annuncio sarà nella tua lingua se impostata nel KDE, ma
soprattutto se qualcuno ha già tradotto <bf/ktalkdlg/.
Lo stesso vale per l'interfaccia per la configurazione, <bf/kcmktalkd/.

<tag/Supporto per otalk e ntalk   <it/(Novità dalla 0.8.1)//
ktalkd ora supporta entrambi i protocolli, anche quando inoltra. Anche
ktalk li supporta entrambi.
</descrip>

<p>Spero che questo demone per il talk ti piacerà,
<p>David Faure
<p><htmlurl url="mailto:faure@kde.org" name="faure@kde.org">

<sect>Piattaforme supportate
<p>

<descrip>
<tag/RedHat Linux 5.0/
La mia piattaforma di sviluppo. Completamente testato su di essa.

<tag/Altri Linux, BSD/
Dovrebbe compilare e partire tranquillamente.

<tag/Solaris/
Non ci lavorerò finchè qualcuno non farà un sostituto per la snprintf.
Si dovrebbe installare un'altra libc per risolve il problema...

<tag/AIX/
Ho sentito qualcosa circa dei problemi con localtime, ctime e funzioni simili.
</descrip>

<p>Avrei piacere nel ricevere commenti sulla compilazione e l'esecuzione
di <tt/ktalkd/ su questi ed altri sistemi.

<sect>Installazione
<p>

<sect1>Come ottenere ktalkd
<p>

<p><tt/ktalkd/ è ora un'applicazione che fa parte del nucleo del progetto KDE  
<url url="http://www.kde.org">, nel pacchetto <bf/kdenetwork/. 

<p>Puoi scaricare <tt/ktalkd/ dal sito principale del KDE,
<url url="ftp://ftp.kde.org/pub/kde"> e dai suoi mirror.

<sect1>Richieste
<p>

Per compilare con successo <tt/ktalkd/, hai bisogno dell'ultima versione
delle librerie del KDE, delle Qt della libreria C++.
Tutte le librerie richieste, così come ktalkd possono essere reperite qui
<url url="ftp://ftp.kde.org/pub/kde/">.

<sect1>Compilazione ed installazione
<p>

  Per compilare ed installare <tt/ktalkd/ sul tuo sistema, digita i
  seguenti comandi partendo dalla directory base della distribuzione
  del <tt/ktalkd/:

<tscreen><verb>
% ./configure
% make
% make install
</verb></tscreen>

Siccome <tt/ktalkd/ è un demone, <tt/make install/ necessita dei privilegi di root.

<p>Non dimenticarti di aggiornare il file /etc/inetd.conf.
Per esempio, in un sistema linux, se il kde sta in /opt/kde, cambia
le linee riguardanti talk ed ntalk in:

<tscreen><verb>
talk   dgram   udp     wait    root    /usr/sbin/tcpd  /opt/kde/bin/kotalkd
ntalk  dgram   udp     wait    root    /usr/sbin/tcpd  /opt/kde/bin/ktalkd
</verb></tscreen>
E' fornito uno script che modifica automaticamente il file.
Per farlo basta digitare
<tscreen><verb>
% ./post-install.sh
</verb></tscreen>
In ogni caso, devi <bf/rilanciare inetd/ dopo questa operazione.
Su molti sistemi Linux dovrebbe andar bene:
<tscreen><verb>
% killall -HUP inetd
</verb></tscreen>

<p>Informami sulle modifiche che hai dovuto fare per compilare
<tt/ktalkd/ sulla tua piattaforma.

<sect>Utilizzo
<p>

Non c'è molto da dire su ktalkd: è un demone. Non ha interfaccia utente.
<p>La finestra di annuncio è semplice: rispondi o ignora.
<p>Per la finestra di configurazione dovrebbe essere lo stesso, eccetto
per l' impostazione dell' inoltramento ad altro utente (o anche ad altra macchina).

<sect1>Scegliere il metodo di inoltramento
<p>
Nessuno è perfetto, ci sono dei pro(+) e dei contro(-).

<p><bf/FWA/ : inoltramento solo dell'annuncio. Connessione diretta. Non raccomandato.
<itemize>
<item>       (+) Puoi sapere chi ti chiama, ma 
<item>       (-) Il chiamante dovrà rispondere ad un annuncio proveniente da te. Annoia. 
<item>       (-) Non utilizzare se hai una macchina che risponde lì dove non sei disponibile.
  (La macchina che risponde non può visualizzare l'annuncio, ci può essere confusione!)
</itemize>
<p><bf/FWR/ : inoltramento di tutte le richieste, cambiando le informazioni quando necessario. Connessione diretta.
<itemize>
<item>       (+) Il chimante non sa che non sei disponibile, ma
<item>       (-) Non saprai chi è il chiamante - solo il suo username,
  (così potresti vedere "talk da Wintalk@la_mia_macchina")
</itemize>
<p><bf/FWT/ : Inoltra tutte le richeste e prendi il talk.  Connessione non diretta.
<itemize>
<item>       (+) Come quello precedente, ma funzione anche se tu e il chimante non potete stare in diretto contatto con gli altri (ad esempio un firewall).
<item>       (+) Sarai avvertito di chi realmente ti sta talkando quando accetterai il talk
<item>       (-) Ma, come in FWR, non vedrai il nome della macchina del chiamante nell'annuncio
</itemize>
<p>In breve, scegli <bf/FWT/ se vuoi utilizzarlo attraverso un firewall (e se ktalkd può accedere ad entrambi i network), <bf/FWR/ negli altri casi.

<sect>Domande e risposte
<p>
<sect1>Perchè root non riceve gli annunci dal KDE?
<p>
Perchè con
il metodo correntemente utilizzato per l'identificazione dell'utente,
si verrebbe a creare un buco nella sicurezza del sistema.
Puoi ovviare a questa limitazione aggiungendo due linee nei file di
configurazione dell'xdm (che sono gli stessi di quelli del kdm).
Nota: nella S.u.S.E. queste linee sono incluse di default.

<p>
Questi file di configurazione stanno in una directory come
/etc/X11/xdm oppure /usr/X11R6/lib/X11/xdm su altri sistemi.
Queste linee suppongono che siano in /etc/X11/xdm, se i files
si trovano in un'altra directory dovrai modificare le linee a dovere.

<p>
Edita il file Xstartup, o crealo se non esiste. Deve comparire così:

<tscreen><verb>
#!/bin/sh
/etc/X11/xdm/GiveConsole
sessreg -a -l $DISPLAY -x /etc/X11/xdm/Xservers $USER
</verb></tscreen>

ed il file Xreset:
<tscreen><verb>
#!/bin/sh
/etc/X11/xdm/TakeConsole
sessreg -d -l $DISPLAY $USER   
</verb></tscreen>

Assicurati che <bf/xdm-config/ punti a questi di files:
<tscreen><verb>
DisplayManager._0.startup:      /etc/X11/xdm/Xstartup
DisplayManager._0.reset:        /etc/X11/xdm/Xreset 
</verb></tscreen>

<P>
Questo farà loggare a kdm (o xdm) l'utente in utmp, che è la cosa
giusta da fare. Secondo il mio parere dovrebbe essere kdm (o xdm)
a loggare gli utenti e non kvt o xterm.
Purtroppo questo non loggherà l'utente come utente X quando si usa startx...
Qualcuno ha un suggerimento per questo?

<sect1> Perchè io, da utente normale, non ricevo gli annunci dal KDE?
<p>
Se il tuo sistema è un linux (con /proc abilitato), allora questo è un bug.
Mandami la descrizione cosicchè io posso correggere il problema.</p>

<p>Altrimenti è normale: ktalkd non può trovare l'utente, come KDE
non lo logga in utmp e il riconoscimente da linux (/proc) è disabilitato.
La soluzione è la stessa descritta nella sezione 5.1.

Un'altra soluzione è quella di essere sicuri di avere sempre un xterm in
esecuzione.

<sect1>Come posso avere un output di debug da ktalkd ?
<P>
Essendo un demone, non c'è output di debug sullo standard output.
Per avere informazioni di debug ( prima di mailarmi un bug report!),
modifica le seguenti linee nel file /etc/inetd.conf:

<tscreen><verb>
talk   dgram   udp     wait    root    /usr/sbin/tcpd  /opt/kde/bin/kotalkd -d
ntalk  dgram   udp     wait    root    /usr/sbin/tcpd  /opt/kde/bin/ktalkd -d
</verb></tscreen>
(nota l'opzione <bf/-d/)

<P>Poi edita il file /etc/syslog.conf e aggiungi la linea seguente :
<tscreen><verb>
*.*         /var/log/all_messages
</verb></tscreen>
<P>Per farlo funzionare, devi rilanciare inetd e syslogd :
<tscreen><verb>
% killall -HUP inetd
% killall -HUP syslogd
</verb></tscreen>
Ed infine, lancia una sessione di talk e vedi in risultato in /var/log/all_messages

Quando sottometti un bug report, non dimenticarti di includere l'output del debug, ma anche la versione del talkd che stai utilizzando e l'output del "./configure".


<sect>History
<p>
Ecco il <bf/ChangeLog/ :
<verb>
1998-09-03  David Faure  <faure@kde.org> (0.8.8)

	* ktalkd/unixsock.cpp: Added chmod => ktalk can write to the socket.

1998-09-02  David Faure  <faure@kde.org>

	* ktalkd/unixsock.cpp, .h: New. Direct communication with ktalk.
	* ktalkd/announce.cpp: Call sendToKtalk.

1998-08-29  David Faure  <faure@kde.org>

	* ktalkd/options.cpp: Default values moved from .h to .cpp. 
	Makes -ansi happier.

1998-08-23  David Faure  <faure@kde.org>

	* ktalkd/process.cpp (process_request): print_response enabled again.

	* ktalkd/find_user.cpp: Removed the 'break;' for xdm, and didn't 
	override tty. This way, you can have both announcements (text & X).

1998-08-19  David Faure  <faure@kde.org> (0.8.7)

	* ktalkd/mail.local: mail.local is back in the distrib. Has been 
	forgotten since 0.7.0 !! I added a README.mail.local to explain
	its purpose.
	
	* ktalkd/announce.cpp: Added text announce in addition to X announce.

	* ktalkd/process.cpp: Removed check for the family field of addr. Oops.

	* doc/en/*, *: Updated my email address from
	  <david.faure@insa-lyon.fr> to <faure@kde.org>
	
1998-08-15  David Faure  <faure@kde.org> (0.8.6)

	* ktalkd/machines/talkconn.cpp: Added check for remote protocol.
	This means that it is now possible to forward to an otalk machine ...

	* ktalk/machines/forwmach.cpp: ... and/or from an otalk machine.

	The first one who sends me an email after testing both, wins :)

	* ktalkd/machines/check_protocol.cpp: Removed. Integrated into 
	  talkconn.cpp. Thanks to Burkhard Lehner for the example code.

	* ktalk/machines/answmach.cpp: Added a sleep(1) for not logged/NEU.

	* ktalkd/print.cpp: Used c++ overriding to name "message()" the 
	    former message_s() et message2().

1998-08-12  David Faure  <faure@kde.org> (0.8.5)

	* ktalkd/find_user.cpp: A nasty bug with unsigned int fixed.
	   Thanks to Rolf Offermanns who found it.
	   Uncommented the use of ut_host for PTYs (ex : xterms).
	   Exit the loop if XDM login found (highest priority).

	* kotalkd/includ.h: Added a simpler version of includ.h.

1998-08-10  David Faure  <faure@kde.org> (0.8.4)

	* ktalkd/machines/talkconn.cpp: Support for otalk. (not finished).

	* kotalkd/*.c: Just send to ktalkd, which responds itself.

	* ktalkd/process.cpp: Handle otalk packets (with vers=0)

1998-08-09  David Faure  <faure@kde.org>

	* kotalkd/kotalkd.c: Dies if ktalk protocol detection (-> ntalk detected).

	* ktalkd/machines/forwmach.cpp: Now forwards DELETEs too. (cf. sig_handler).

	* ktalkd/machines/forwmach.cpp: Final cleanup improved. (for forwmachines).

	* ktalkd/options.cpp: Created, to hold systemwide options.

	* ktalkd/*.c: Converted to c++ all c files.

1998-08-07  David Faure  <faure@kde.org> (0.8.3)

	* ktalkd/doc/en/Makefile.am: index.html -> ktalkd.html

1998-08-07  David Faure  <faure@kde.org> (0.8.2)

	* ../acincktalk.m4: Bug fix for the bug fix. Linux detection ok.

1998-08-02  David Faure  <faure@kde.org>

	* doc/en/ktalkd.sgml: Converted all documentation to sgml. Phew.

	* kcmktalkd/forwmachpage.cpp: i18n'ed the explanation for forwards

1998-07-31  David Faure  <faure@kde.org>

	* ../acincktalk.m4: More output printed out and a bug fix  
	
1998-07-30  David Faure  <faure@kde.org> (0.8.1)

	* kotalkd/*.c: New way to support otalk protocol : forward everything
	to local ntalk daemon (possibly ktalkd, but any other should work too)

	* ktalkd/machines/talkconn.cpp (listen): Use SOMAXCONN as arg to listen

1998-07-27  David Faure  <faure@kde.org> (0.8.0)

	* kotalkd/: Created to support otalk protocol. No new source
	files. Everything is links in it, except Makefile.am and all
	generated files.

1998-07-26  David Faure  <faure@kde.org>

	* ktalkd/threads.c: Created to manage children processes (register, wait, ...)
	No more zombie processes waiting 1mn30s to be acknowledged. :)

	* ktalkd/machines/forwmach.*: FWT. Lots of bug fixed. Fully tested now.

	* ktalkd/machines/talkconn.*: Bug fixing.

1998-07-24  David Faure  <faure@kde.org>
	
	* ktalkd/machines/forwmach.*: Created the Forwarding machine. FWA. FWR.

	* kcmktalkd/*: Added the 'forward' configuration page.

	* ktalkd/*: Reverted most of the patch from Enrico Scholz.
	  The forwarding machine is now used for NEU if NEUBehaviour=1.

1998-07-18  David Faure  <faure@kde.org>

	* ktalkd/readcfg++.h: Removed. Now in readconf.h

1998-07-15  David Faure  <faure@kde.org> (0.7.0)

	* ktalkd/machines/talkconn.cpp (set_edit_chars): At last ! Fixed the 
	   bug in answmach banners, which first appeared 8 months ago, 
	   erasing half of some lines !

	* ktalkd/table.c, ktalkd/print.c: Improved logs.

	* ktalkd/process.c: Bug fixed : insert_table called even for NEU.

	* ktalkd/machines/*: Converted the answering machine to C++.
 	                     Split into 3 classes.
	     TalkConnection : Handles the protocol.
	     TalkMachine : Generic talk machine.
	     AnswMachine : Answering machine. Inherits from TalkMachine.

1998-07-08  David Faure  <faure@kde.org> (0.6.2)

	* ktalkd/*, ktalkdlg.cpp: Applied patch for NEUBehaviour=1 
	by Enrico Scholz <enrico.scholz@wirtschaft.tu-chemnitz.de> 

	* answmach/init_disp.c: Handle VWERASE if not defined (for AIX)
	
1998-07-06  David Faure  <faure@kde.org>

	* ktalkd/announce.c: Small bug fix in text announcement (remotename).

1998-06-15  David Faure  <faure@kde.org>
	
	* ktalkd/find_user.c: Added blank after display, needed by announce.c
	
	* kcmktalkd/answmachpage.cpp: Override help() to display ktalkd's help.

1998-06-13  David Faure  <faure@kde.org> (0.6.1)

	* includ.h, talkd.h: took talkd.h from ktalk. ktalkd doesn't use the
	                        system one anymore.

	* answmach/look_up.c: use sockaddr instead of osockaddr

	* acincktalk.m4, configure.in.1: removed the check for osockaddr

	* ktalkd/talkd.c: Use sys/params.h where available, for hostname length

1998-06-11  David Faure  <faure@kde.org> (0.6.0)

	* ktalkd/: Reorganised the directory structure, to ship ktalkd 
	with ktalkdlg and kcmktalkd in a single package.
	
	* talkd.c: Caller's hostname was limited to 32 ! Now 256.

	* Makefile.am: rewrote some of them, for non-KDE users.

1998-06-09  David Faure  <faure@kde.org> (0.5.7)

	* kcmktalkd: First release of the configuration dialog
	
1998-05-16  David Faure  <faure@kde.org> (0.5.6)

	* announce.c: Announces with ktalkdlg on ALL displays where the
           user is found. It works ! 

	* readcfg++.cpp (init_user_config):
	   Added setenv("HOME",...) because the kdelibs rely on that to find 
	   the user config file.

1998-05-15  David Faure  <faure@kde.org> (0.5.5)

	* doc/: Made HTML documentation. Phew. Done.

	* readcfg++.cpp (init_user_config):
	   Removed the un-necessary looking in pwd file. 
           KDElibs do that for us :)

	* find_user.c:
	   Disabled X processes scanning if uid < 10. (Security hole)
	   Corrected a bug (S_ISCHR() is now "& 020") which didn't let you talk
	   to tty2 if tty1 was "mesg n".

	* announce.c: open user config file before calling announce_proc, so 
	   that it *is* closed now. It wasn't because of 'return'.
	

1998-05-06  David Faure  <faure@kde.org>

	* announce.c: now the non-KDE sound works with and without option.
	* acinclude.m4.in - the ktalkd one : some more corrections for 
                                             working without X.

1998-04-28  David Faure  <faure@kde.org> (0.5.4)

	* acinclude.m4.in - the one from ktalkd package, not the kdenonbeta one
	   rewrote X detection, so that it works also without X :)

1998-04-20  David Faure  <faure@kde.org> (0.5.3)
	
	* Makefile.am: Removed -lkdeui, not needed.
	* io.c: Corrected an awful bug 
                      (NEUBanner displayed instead of OPTinvitelines)
	* readcfg++.cpp: Added missing "/" before 'ktalkdrc'

1998-04-19  David Faure  <faure@kde.org> (0.5.2)

	* readcfg++.cpp: added check for user config file.
 	        (was created with root permission otherwise)
	* acinclude.m4.in - the ktalkd one: updated

1998-04-15  David Faure  <faure@kde.org> (0.5.1)

	ktalkd doesn't use anymore kdedir() because it's protected.
	It sets now $KDEBINDIR, for portable ktalkdrc files. KDEBINDIR 
	is determined by a call to the kde_bindir() function.
	Makefile doesn't define TALKD_CONF anymore for compilation :
	ktalkd now opens ktalkdrc from KApplication::kde_configdir().

1998-03-26  David Faure  <faure@kde.org> (0.5.0)
	ktalkdrc: Extprg is now $KDEDIR/bin/ktalkdlg.
	KDEDIR is now set when reading global configuration file.
	Default value for Extprg includes $KDEDIR.

1998-03-25  David Faure  <faure@kde.org> (0.4.8)
	KDEDIR is now set by ktalkd, not by ktalkdlg.
	ktalkdrc*:removed path in front of sound files. ktalkdlg now finds them
	 in kde_sounddir().
	Added option ExtPrg. Set to ktalkdlg (default) or ktalk.

1998-03-14  David Faure  <faure@kde.org> (0.4.7)
	Made 2 packages out of ktalkd : ktalkd and ktalkdlg (new name for
	 atdlg), so that Burkhard Lehner <b_lehner@informatik.uni-kl.de>
	can improve it to communicate with ktalk.

1998-03-13  David Faure  <faure@kde.org> (0.4.6)
	Changed S_MESSG size. (Too little for mail first line, if NEU)
	Used mkstemp instead of popen for the message left to the
	answering machine. Added option EmptyMail, to avoid getting
	empty mails.

1998-03-10  David Faure  <faure@kde.org> (0.4.5)
	Renamed debug to debug_mode (debug exists in qt)
	Updated configure.in and acinclude.m4 to match CVS ones.
	Same for ltconfig, ltmain.sh, ...
	Added new translations (es, it) and changed po structure.
	Added NEUBanner* options to ktalkdrc.

1998-02-27  D.F. (thanks to Juraj Bednar <bednar@isternet.sk>) (0.4.4)
        Removed ktalkd-0.4.x/protocols from the distribution. Caused a 
        bug when compiling.

1998-02-15  D.F. (thanks to B. Lehner<b_lehner@informatik.uni-kl.de>) (0.4.3)
	added checks for paths.h and protocols/talkd.h (for Solaris)
	Added default paths (/dev/ and /var/run/utmp) if paths.h not found
	Included talkd.h in the distribution, for Solaris which doesn't have it
        Changed AC_CHECK_OSOCKADDR to use this file if protocols/talkd.h absent

1998-02-04  David Faure  <faure@kde.org> (0.4.2)
	Added user option Answmach.
	Moved the daemon to $KDEDIR/bin. One must now change inetd.conf 
	(this way, rpms won't conflict with standard ones, and the old
	in.ntalkd will remain available). Should I deviate 'talk' protocol
	too (in addition to 'ntalk') ?
	Made installation NOT overwrite actual sitewide config file.
	Merged and updated READMEs.

1998-02-03  David Faure  <faure@kde.org> (0.4.1)
	Added -rpath option, as it's necessary for ktalkd if $KDEDIR/lib is
	not set in ld.so.conf (LD_LIBRARY_PATH not read by a daemon)

1998-02-03 David Faure  <faure@kde.org> (0.4.0)
	Corrected bugs related to new acinclude.m4 : compiling without X
	and without KDE is possible again.
	Added memcpy for structs.
	Made atdlg re-write ktalkdrc for user if necessary.
	
1998-01-29  David Faure  <faure@kde.org> (0.3.4)
	Removed answinfo var., added return val to announce and process_request.
	Non existent user (NEU) support : either launch answmach or do nothing.
	(set it in systemwide ktalkdrc). Don't sleep() before answering if NEU
	or not logged.

1998-01-26  David Faure  <faure@kde.org> (0.3.3)
	Deutsch translation added by J. Mertin <smurphy@stardust.phantasia.org>
	Enabled atdlg without sound, following option set.
	Removed nasty \r\n, not needed.
	Made banner arrive 16 chars at a time, not the whole at once !

1998-01-25  David Faure  <faure@kde.org> (0.3.2)
	Changed default configuration : ktalkd.wav will be installed
	in $KDEDIR/share/apps/ktalkd.  ktalkdrc points to it.
	Made package install_root capable (e.g. for building rpms).

1998-01-25  David Faure  <faure@kde.org> (0.3.1)
	atdlg will now play sound itself, using libmediatool.
	Typos and bugs corrected.

1998-01-24  still me ... :) (0.3.0)
        Added internationalization to atdlg.cpp. Had to change atdlg params.
        User must set language in ktalkdrc.
	Added more user options to ktalkdrc_user: Sound, SoundPlayer, SoundFile.
	Updated configure.in and acinclude.m4 to stick to kdenetwork as much
	as possible.
        
1998-01-14  David Faure <faure@kde.org> (0.2.5)
	Moved -DHAVE_KDE from config.h (was a bad hack) to Makefile.am
	Added AC_CHECK_GETDOMAINNAME and AC_CHECK_GETHOSTNAME...
	 and some other little changes to get closer to autoconf stuff from
	 kdenetwork, for future integration. Worked on BSD portability.

1998-01-12  David Faure  <faure@kde.org> (0.2.4)
	Changed acinclude.m4, to remove NULL, and to make check for osockaddr
	work better under bsd... Also removed NULL from anywhere in the code.

1998-01-11  David Faure  <faure@kde.org> (0.2.3)
	Added a macro in acinclude.m4, to check for sockaddr and osockaddr.

1998-01-11  David Faure  <faure@kde.org> (0.2.2)
	Wrote a new way of finding users, in addition to reading utmp,
	which reads /proc to find $DISPLAY of processes. (Linux only).

1998-01-08  David Faure  <faure@kde.org> (0.2.1)
	Removed MSG_EOR as it used in BSD with another meaning.

1997-12-19  David Faure  <faure@kde.org> (0.2.0)
	Merged patch from Ralph Weichert (check for libbsd, needed under libc5)

1997-12-16  David Faure  <faure@kde.org> (0.1.9)
	Fixed link command (back to $(LINK), not $(CXXLINK).
	Fixed process.c (config.h not included => NEW_FIND_USER not defined)
	Wrote includ.h to resolve struct definitions problems.
	Started user config file processing (~/.kde/share/config/ktalkdrc)

1997-12-13  David Faure  <faure@kde.org> (0.1.8)
	Improved configure.in, acinclude.m4, and ktalkd/Makefile.am, to
	* find out where to install the daemon
	* compile even without X, Qt, and KDE
	* remove jpeg/gif dependencies

1997-12-12  David Faure  <faure@kde.org> (0.1.7)
	Small bugs correction. 	

1997-12-08  David Faure and Ralph Weichert (0.1.6)
	Added autoconf and automake support. Added support for glibc.
	Back to c compiling, except for .cpp files, of course.

1997-12-02  David Faure <faure@kde.org> (0.1.5)
	Read KDE configuration file, $KDEDIR/share/config/ktalkdrc, both by
	atdlg and ktalkd, in readcfg++.cpp. Made all daemon compile with g++.
	(Is this right ?)

1997-11-23  David Faure <faure@kde.org> (0.1.4)
	Re-wrote announcement by answering machine. One line at a time, not
	one char at a time.

1997-11-22  David Faure <faure@kde.org> (0.1.3)
	Re-wrote process_etc_file, to read talkd.conf sequentially.

1997-11-21  David Faure <faure@kde.org> (0.1.2c)
	Merged patch from <Ralph.Weichert@physik.th-darmstadt.de> :
         Used KDE libs in atdlg. User configurable talk client.
	Merged patch from Bruce Gingery <bruce@gtcs.com> :
	 User configurable To: E-Mail address
	
1997-10-25  David Faure <faure@kde.org> (0.1.2b)
	Made atdlg finish after RING_WAIT seconds, so that the re-announce
	  will display another window (=> compatibility with other clients than
	  ktalk)

1997-10-22  David Faure <faure@kde.org> (0.1.2)
	Added to ktalkd (see README for description):
	 * sound capability
	 * configuration (/etc/talkd.conf)
	 * answering machine 

1997-05-14  R. (0.1.1)
        Improved (I hope) X11 recognition:
                Local XDM logins (depends on sessreg)
                Read $DISPLAY variable for PTY logins
        atdlg is run as user and can use MIT-magic-cookies
        atdlg will run talk program
</verb>

<sect>Copyright

<p>ktalkd è mantenuto e migliorato da David Faure, faure@kde.org
<p>Il programma originale è stato scritto da Robert Cimrman, cimrman3@students.zcu.cz

<p>Qui riporto la licenza (che ovviamente non traduco :))
<tscreen><verb>
ktalkd is Copyright 1997,1998 David Faure, faure@kde.org

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

</verb></tscreen>
<p>
<p>La traduzione è stata curata da:
<p>Gianluigi Tiesi (<htmlurl url="mailto:tiesi@cli.di.unipi.it" name="tiesi@cli.di.unipi.it">)
</article>
