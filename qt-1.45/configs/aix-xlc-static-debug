# Compiling
SYSCONF_CXX		= xlC

# Compiling with support libraries
SYSCONF_CXXFLAGS_X11	= 
SYSCONF_CXXFLAGS_QT	= -I$(QTDIR)/include
SYSCONF_CXXFLAGS_OPENGL	= 

# Compiline YACC output
SYSCONF_CXXFLAGS_YACC     = 

# Linking with support libraries
# X11
SYSCONF_LFLAGS_X11	= 
SYSCONF_LIBS_X11	= -lX11 -lXext
# Qt, Qt+OpenGL
SYSCONF_LFLAGS_QT	= -L$(QTDIR)/lib
SYSCONF_LIBS_QT		= -lqt
SYSCONF_LIBS_QT_OPENGL	= -lqgl
# OpenGL
SYSCONF_LFLAGS_OPENGL	= 
SYSCONF_LIBS_OPENGL	= -lGL -lGLU -lXmu
# Yacc
SYSCONF_LIBS_YACC	= 

# Linking applications
SYSCONF_LINK		= xlC
SYSCONF_LFLAGS		= 
SYSCONF_LIBS		= 

# Link flags shared objects
SYSCONF_LFLAGS_SHOBJ	= 

# Meta-object compiler
SYSCONF_MOC		= $(QTDIR)/bin/moc

# Linking shared libraries
#   - Build the $(TARGET) library, eg. lib$(TARGET).so.0.0
#   - Place target in $(DESTDIR) - which has a trailing /
#   - Usually needs to incorporate $(VER_MAJ) and $(VER_MIN)
#
SYSCONF_LINK_SHLIB	= ld
SYSCONF_LINK_TARGET_SHARED	= lib$(TARGET).so.$(VER_MAJ).$(VER_MIN)
SYSCONF_LINK_LIB_SHARED	= /usr/lpp/xlC/bin/makeC++SharedLib -p 0 -o lib$(TARGET).so.$(VER_MAJ).$(VER_MIN) -lX11 -lXext $(OBJECTS) $(OBJMOC); ar q lib$(TARGET).a lib$(TARGET).so.$(VER_MAJ).$(VER_MIN); ranlib lib$(TARGET).a; mv lib$(TARGET).a $(DESTDIR)

# Linking static libraries
#   - Build the $(TARGET) library, eg. lib$(TARGET).a
#   - Place target in $(DESTDIR) - which has a trailing /
#
SYSCONF_AR		= ar cq
SYSCONF_LINK_TARGET_STATIC = lib$(TARGET).a
SYSCONF_LINK_LIB_STATIC	= rm -f $(DESTDIR)$(SYSCONF_LINK_TARGET_STATIC) ; \
				 $(SYSCONF_AR) $(DESTDIR)$(SYSCONF_LINK_TARGET_STATIC) $(OBJECTS) $(OBJMOC) ; \
				 ranlib $(DESTDIR)$(SYSCONF_LINK_TARGET_STATIC)
# Compiling application source
SYSCONF_CXXFLAGS	= -+ -qstrict -D_BSD -g
# Compiling library source
SYSCONF_CXXFLAGS_LIB	= -g
# Compiling shared-object source
SYSCONF_CXXFLAGS_SHOBJ	= -g
SYSCONF_LINK_LIB	= $(SYSCONF_LINK_LIB_STATIC)
SYSCONF_LINK_TARGET	= $(SYSCONF_LINK_TARGET_STATIC)
