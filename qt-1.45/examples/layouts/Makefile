#############################################################################
# Makefile for building layouts
# Generated by tmake at 18:02, 1999/02/26
#     Project: layouts
#    Template: app
#############################################################################

####### System-dependendant options

####### BEGIN
#
#   This section was automatically generated from
#      /usr/lib/qt-1.45/Makefile for building on
#       on Sun May 14 19:46:14 PDT 2000
#

# Compiling
SYSCONF_CXX		= g++

# Compiling with support libraries
SYSCONF_CXXFLAGS_X11	= -I/usr/X11R6/include
SYSCONF_CXXFLAGS_QT	= -I$(QTDIR)/include
SYSCONF_CXXFLAGS_OPENGL	= -I/usr/X11R6/include

# Compiline YACC output
SYSCONF_CXXFLAGS_YACC     = -Wno-unused -Wno-parentheses

# Linking with support libraries
# X11
SYSCONF_LFLAGS_X11	= -L/usr/X11R6/lib
SYSCONF_LIBS_X11	= -lX11 -lXext
# Qt, Qt+OpenGL
SYSCONF_LFLAGS_QT	= -L$(QTDIR)/lib
SYSCONF_LIBS_QT		= -lqt
SYSCONF_LIBS_QT_OPENGL	= -lqgl
# OpenGL
SYSCONF_LFLAGS_OPENGL	= -L/usr/X11R6/lib
SYSCONF_LIBS_OPENGL	= -lMesaGL -lMesaGLU -lXmu -lXext -lm
# Yacc
SYSCONF_LIBS_YACC	= 

# Linking applications
SYSCONF_LINK		= g++
SYSCONF_LFLAGS		= 
SYSCONF_LIBS		= 

# Link flags shared objects
SYSCONF_LFLAGS_SHOBJ	= -shared

# Meta-object compiler
SYSCONF_MOC		= $(QTDIR)/bin/moc

# Linking shared libraries
#   - Build the $(TARGET) library, eg. lib$(TARGET).so.0.0
#   - Place target in $(DESTDIR) - which has a trailing /
#   - Usually needs to incorporate $(VER_MAJ) and $(VER_MIN)
#
SYSCONF_LINK_SHLIB	= g++
SYSCONF_LINK_TARGET_SHARED	= lib$(TARGET).so.$(VER_MAJ).$(VER_MIN)
SYSCONF_LINK_LIB_SHARED	=  $(SYSCONF_LINK_SHLIB) -shared -Wl,-soname,lib$(TARGET).so.$(VER_MAJ) \
				     $(LFLAGS) -o $(SYSCONF_LINK_TARGET_SHARED) \
				     $(OBJECTS) $(OBJMOC) $(LIBS); \
				 mv $(SYSCONF_LINK_TARGET_SHARED) $(DESTDIR); \
				 cd $(DESTDIR); \
				 rm -f lib$(TARGET).so lib$(TARGET).so.$(VER_MAJ); \
				 ln -s $(SYSCONF_LINK_TARGET_SHARED) lib$(TARGET).so; \
				 ln -s $(SYSCONF_LINK_TARGET_SHARED) lib$(TARGET).so.$(VER_MAJ)

# Linking static libraries
#   - Build the $(TARGET) library, eg. lib$(TARGET).a
#   - Place target in $(DESTDIR) - which has a trailing /
#
SYSCONF_AR		= ar cqs
SYSCONF_LINK_TARGET_STATIC = lib$(TARGET).a
SYSCONF_LINK_LIB_STATIC	= rm -f $(DESTDIR)$(SYSCONF_LINK_TARGET_STATIC) ; \
				 $(SYSCONF_AR) $(DESTDIR)$(SYSCONF_LINK_TARGET_STATIC) $(OBJECTS) $(OBJMOC) 
# Compiling application source
SYSCONF_CXXFLAGS	= -pipe -O2 -fno-strength-reduce
# Compiling library source
SYSCONF_CXXFLAGS_LIB	= -O2 -fno-strength-reduce -fPIC
# Compiling shared-object source
SYSCONF_CXXFLAGS_SHOBJ	= -O2 -fno-strength-reduce -fPIC
# Default link type (stati linking is still be used where required)
SYSCONF_LINK_LIB	= $(SYSCONF_LINK_LIB_SHARED)
SYSCONF_LINK_TARGET	= $(SYSCONF_LINK_TARGET_SHARED)

####### End of automatically generated section
####### END

####### Compiler, tools and options

CXX	=	$(SYSCONF_CXX)
CXXFLAGS=	$(SYSCONF_CXXFLAGS_QT) $(SYSCONF_CXXFLAGS)
LFLAGS	=	$(SYSCONF_LFLAGS_QT) $(SYSCONF_LFLAGS_X11) $(SYSCONF_LFLAGS)
LIBS	=	$(SYSCONF_LIBS_QT) $(SYSCONF_LIBS_X11) $(SYSCONF_LIBS)
MOC	=	$(SYSCONF_MOC)

####### Target

TARGET	= layouts
DESTDIR = ./
VER_MAJ = 1
VER_MIN = 0

####### Files

HEADERS =	qtgrid.h \
		qthbox.h \
		qtvbox.h \
		qtbuttonrow.h \
		qtlabelled.h
SOURCES =	qtgrid.cpp \
		qthbox.cpp \
		qtvbox.cpp \
		qtbuttonrow.cpp \
		qtlabelled.cpp \
		layouts.cpp
OBJECTS =	qtgrid.o \
		qthbox.o \
		qtvbox.o \
		qtbuttonrow.o \
		qtlabelled.o \
		layouts.o
SRCMOC	=	moc_qtgrid.cpp \
		moc_qthbox.cpp \
		moc_qtvbox.cpp \
		moc_qtbuttonrow.cpp \
		moc_qtlabelled.cpp
OBJMOC	=	moc_qtgrid.o \
		moc_qthbox.o \
		moc_qtvbox.o \
		moc_qtbuttonrow.o \
		moc_qtlabelled.o

####### Implicit rules

.SUFFIXES: .cpp .cxx .cc .C .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: $(DESTDIR)$(TARGET)

$(DESTDIR)$(TARGET): $(OBJECTS) $(OBJMOC) 
	$(SYSCONF_LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(LIBS)

moc: $(SRCMOC)

tmake:
	tmake layouts.pro

clean:
	-rm -f $(OBJECTS) $(OBJMOC) $(SRCMOC)
	-rm -f *~ core

####### Compile

qtgrid.o: qtgrid.cpp \
		qtgrid.h

qthbox.o: qthbox.cpp \
		qthbox.h

qtvbox.o: qtvbox.cpp \
		qtvbox.h \
		qthbox.h

qtbuttonrow.o: qtbuttonrow.cpp \
		qtbuttonrow.h

qtlabelled.o: qtlabelled.cpp \
		qtlabelled.h

layouts.o: layouts.cpp \
		qtbuttonrow.h \
		qtlabelled.h \
		qtgrid.h \
		qthbox.h \
		qtvbox.h

moc_qtgrid.o: moc_qtgrid.cpp \
		qtgrid.h

moc_qthbox.o: moc_qthbox.cpp \
		qthbox.h

moc_qtvbox.o: moc_qtvbox.cpp \
		qtvbox.h \
		qthbox.h

moc_qtbuttonrow.o: moc_qtbuttonrow.cpp \
		qtbuttonrow.h

moc_qtlabelled.o: moc_qtlabelled.cpp \
		qtlabelled.h

moc_qtgrid.cpp: qtgrid.h
	$(MOC) qtgrid.h -o moc_qtgrid.cpp

moc_qthbox.cpp: qthbox.h
	$(MOC) qthbox.h -o moc_qthbox.cpp

moc_qtvbox.cpp: qtvbox.h
	$(MOC) qtvbox.h -o moc_qtvbox.cpp

moc_qtbuttonrow.cpp: qtbuttonrow.h
	$(MOC) qtbuttonrow.h -o moc_qtbuttonrow.cpp

moc_qtlabelled.cpp: qtlabelled.h
	$(MOC) qtlabelled.h -o moc_qtlabelled.cpp

